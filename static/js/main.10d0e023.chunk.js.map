{"version":3,"sources":["js/constants/action-types.js","js/reducers/index.js","js/store/index.js","js/middleware/index.js","js/components/Form.js","js/actions/index.js","js/components/TodoCount.js","js/components/Header.js","js/components/TodoList.js","js/components/Board.js","js/components/App.js","index.js"],"names":["ADD_TODO","MOVE_OBJECT","total","getItems","count","offset","Array","from","length","v","k","map","id","content","reorder","list","startIndex","endIndex","result","splice","removed","moveTodo","state","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","initialState","todo","inProgress","done","rootReducer","action","type","Object","assign","concat","payload","title","items","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","dispatch","next","ConnectedForm","props","newTodo","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","addTodo","onSubmit","style","marginLeft","onChange","Component","Form","connect","countStyle","textAlign","width","height","fontSize","background","padding","boxShadow","TodoCount","color","ConnectedHeader","className","Header","itemStyle","isDragging","draggableStyle","userSelect","borderStyle","borderWidth","borderColor","TodoList","name","provided","snapshot","ref","innerRef","isDraggingOver","item","key","draggableId","draggableProps","dragHandleProps","placeholder","Board","moveObject","onDragEnd","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.10d0e023.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const MOVE_OBJECT = \"MOVE_OBJECT\";\r\n","import { ADD_TODO, MOVE_OBJECT } from \"../constants/action-types\";\r\n/*** Helper functions ***/\r\nlet total = 20;\r\nconst getItems = (count, offset = 0) =>\r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    id: `item-${k + offset}`,\r\n    content: `Project ${k + offset}`\r\n  }));\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst moveTodo = (state, source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = state;\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n  return result;\r\n};\r\n\r\n/** End helper functions **/\r\n\r\nconst initialState = {\r\n  todo: getItems(10),\r\n  inProgress: getItems(5, 10),\r\n  done: getItems(5, 15)\r\n};\r\n\r\n\r\n/**\r\n * 2 mutating actions: Add and Move object\r\n */\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === ADD_TODO) {\r\n    return Object.assign({}, state, {\r\n      todo: state.todo.concat(\r\n        {\r\n          id: `item-${total++}`,\r\n          content: action.payload.title\r\n        })\r\n    });\r\n  }\r\n  if (action.type === MOVE_OBJECT) {\r\n    const { source, destination } = action.payload;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    // Same list === reordering within the list\r\n    if (source.droppableId === destination.droppableId) {\r\n      const items = reorder(\r\n        state[source.droppableId],\r\n        source.index,\r\n        destination.index\r\n      );\r\n      return Object.assign({}, state, {\r\n        [source.droppableId]: items\r\n      });\r\n    }\r\n    // Different list: moving between lists\r\n    else {\r\n      const result = moveTodo(\r\n        state,\r\n        state[source.droppableId],\r\n        state[destination.droppableId],\r\n        source,\r\n        destination\r\n      );\r\n      return Object.assign({}, state, {\r\n        todo: result.todo,\r\n        inProgress: result.inProgress,\r\n        done: result.done\r\n      });\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;\r\n","// src/js/store/index.js\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport { middleware } from \"../middleware\";\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  storeEnhancers(applyMiddleware(middleware))\r\n);\r\n\r\nexport default store;\r\n","export function middleware({ dispatch }) {\r\n  return function(next) {\r\n    return function(action) {\r\n      return next(action);\r\n    };\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../actions/index\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addTodo: todo => dispatch(addTodo(todo))\r\n    };\r\n}\r\n\r\nclass ConnectedForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newTodo: \"\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ [event.target.id]: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const { newTodo } = this.state;\r\n        this.props.addTodo({ title: newTodo });\r\n        this.setState({ newTodo: \"\" });\r\n    }\r\n    render() {\r\n        const { newTodo } = this.state;\r\n        return (\r\n            <form onSubmit={this.handleSubmit} style={{marginLeft: \"20px\"}}>\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"newTodo\"\r\n                        value={newTodo}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst Form = connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(ConnectedForm);\r\n\r\nexport default Form;","import {ADD_TODO, MOVE_OBJECT} from \"../constants/action-types\";\r\n\r\nexport function addTodo(payload) {\r\n  return { type: ADD_TODO, payload };\r\n}\r\nexport function moveObject(payload) {\r\n  return { type: MOVE_OBJECT, payload };\r\n}\r\n","import React from \"react\";\r\n\r\nconst countStyle = {\r\n  textAlign: \"center\",\r\n  width: \"150px\",\r\n  height: \"50px\",\r\n  fontSize: \"20px\",\r\n  background: \"white\",\r\n  padding: \"3px\",\r\n\r\n  boxShadow: \"inset 0 0 4px grey\"\r\n};\r\n\r\n\r\nconst TodoCount = props =>\r\n  <div style={countStyle}><b>{props.count}</b>\r\n    <br/><span style={{color: \"gray\"}}>PROJECTS</span>\r\n  </div>;\r\n\r\nexport default TodoCount;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Form from \"./Form\";\r\nimport TodoCount from \"./TodoCount\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    count: state.todo.length + state.inProgress.length + state.done.length\r\n  };\r\n};\r\n\r\n// Some old school React components\r\nclass ConnectedHeader extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"appHeader\">\r\n        <div className=\"form\">\r\n          <h2>Add project</h2>\r\n          <Form />\r\n        </div>\r\n        <div>\r\n          <div style={{textAlign: \"center\", fontSize:\"20px\"}}><b>TOTAL</b></div>\r\n          <TodoCount count={this.props.count}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Header = connect(\r\n  mapStateToProps,\r\n  null\r\n)(ConnectedHeader);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport TodoCount from \"./TodoCount\";\r\n\r\nconst itemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the todo object look a bit nicer\r\n  fontSize: \"20px\",\r\n  userSelect: 'none',\r\n  padding: 16,\r\n  borderStyle: \"solid\",\r\n  borderWidth: \"1px\",\r\n  borderColor: \"lightgrey\",\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? 'lightgreen' : 'white',\r\n\r\n  ...draggableStyle\r\n});\r\n\r\n/**\r\n * Following react dnd example\r\n * props\r\n *  list: The list of todo object\r\n *  name: The display name of the column\r\n */\r\nconst TodoList = props =>\r\n  <div className=\"todoList\">\r\n    <div className=\"listHeader\">\r\n      <div style={{\r\n        fontSize: \"30px\",\r\n        color: \"white\"}}>\r\n        {props.name}\r\n      </div>\r\n      <TodoCount count={props.list.length}/>\r\n    </div>\r\n    <Droppable droppableId={props.id}>\r\n      {(provided, snapshot) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          style={{\r\n            background: snapshot.isDraggingOver ?\r\n              'lightblue' : 'lightgrey'}}\r\n        >\r\n          {props.list.map((item, index) => (\r\n            <Draggable\r\n              key={item.id}\r\n              draggableId={item.id}\r\n              index={index}>\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.draggableProps}\r\n                  {...provided.dragHandleProps}\r\n                  style={itemStyle(\r\n                    snapshot.isDragging,\r\n                    provided.draggableProps.style\r\n                  )}>\r\n                  {item.content}\r\n                </div>\r\n              )}\r\n            </Draggable>\r\n          ))}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  </div>;\r\n\r\nexport default TodoList;","// src/js/components/Header.jsx\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { moveObject } from \"../actions/index\";\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport TodoList from \"./TodoList\";\r\nimport '../../App.css';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    moveObject: payload => dispatch(moveObject(payload)),\r\n  };\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todo: state.todo,\r\n    inProgress: state.inProgress,\r\n    done: state.done\r\n  };\r\n};\r\n/**\r\n * To create more columns, add more TodoList components in the DragDropContext\r\n * Ensure the corresponding fields are added to the state in js/reducers/index.js\r\n */\r\nconst ConnectedBoard = props => (\r\n  <div className=\"board\">\r\n    <DragDropContext onDragEnd={props.moveObject}>\r\n      <TodoList name=\"Todo\" id=\"todo\" list={props.todo}/>\r\n      <TodoList name=\"In Progress\" id=\"inProgress\" list={props.inProgress}/>\r\n      <TodoList name=\"Done\" id=\"done\" list={props.done}/>\r\n    </DragDropContext>\r\n  </div>\r\n);\r\n\r\nconst Board = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ConnectedBoard);\r\n\r\nexport default Board;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Board from \"./Board\";\r\n\r\nconst App = () => (\r\n  <>\r\n    {/*Header*/}\r\n    <Header />\r\n\r\n    {/*Header*/}\r\n    <Board />\r\n  </>\r\n);\r\n\r\nexport default App;","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./js/store/index\";\r\nimport App from \"./js/components/App\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}